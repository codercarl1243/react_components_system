.button {
    /* Layout properties */
    --button-font-size: 1rem;
    --button-margin: var(--spacing-sm);
    --button-padding-y: var(--spacing-sm);
    --button-padding-x: var(--spacing);
    --button-icon-width: 24px;
    --button-spinner-width: 24px;
    /* WCAG Target Size Requirements */
    /* AA: 24px x 24px minimum, AAA: 44px x 44px minimum */
    min-width: 44px;
    min-height: 44px;

    /* Layout - reserve space for icon and spinner to prevent layout shift*/
    display: grid;
    grid-template-columns: var(--button-icon-width) fit-content(100%) var(--button-spinner-width);
    gap: var(--spacing);
    align-items: center;
    white-space: nowrap;

    /* icon | text | spinner */
    & .button__content {
        grid-column: 2;
    }

    & .spinner {
        grid-column: 3;
        justify-self: center;
    }

    &.button-w-icon .icon {
        grid-column: 1;
        justify-self: center;
    }

    margin: var(--button-margin);
    padding: var(--button-padding-y) var(--button-padding-x);

    /* Reset browser defaults */
    -webkit-appearance: none;
    appearance: none;
    background: none;
    border: var(--border-thin);
    border-radius: var(--radius-md);
    outline: 0;
    box-shadow: none;

    /* Apply color properties (All Colors and variants defined below) */
    background-color: var(--button-bg-color, transparent);
    color: var(--button-color, currentColor);
    border-color: var(--button-border-color, currentColor);
    box-shadow: var(--button-shadow, none);
    outline-color: var(--button-outline-color, currentColor);
    outline-offset: var(--button-outline-offset);

    /* Typography */
    font: inherit;
    font-size: var(--button-font-size);
    line-height: 1.25;
    text-align: center;
    vertical-align: middle;

    /* Smooth transitions */
    transition: background-color 0.2s ease,
    color 0.2s ease,
    border-color 0.2s ease,
    outline 0.2s ease,
    box-shadow 0.2s ease;

    /* Interactive states - UX communication through outlines and transforms */
    &:hover {
        outline: 1px solid var(--button-outline-color, currentColor);
        box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);
    }

    &:focus-visible {
        outline: 2px solid var(--button-outline-color, currentColor);
        outline-offset: var(--button-outline-offset);
        box-shadow: none;
    }

    &:active,
    &[data-pressed="true"] {
        outline: 1px dotted var(--button-outline-color, currentColor);
        transform: translateY(1px);
    }

    /* The button can't be disabled using this base button but other packages might add disabled to the button on the DOM. We should maintain consistent styling */
    &:is(:disabled, [aria-disabled="true"]),
    &[data-variant]:is(:disabled, [aria-disabled="true"]),
    &[data-style]:is(:disabled, [aria-disabled="true"]) {
        --button-bg-color: var(--color-neutral-200);
        --button-color: var(--color-neutral-800);
        --button-border-color: var(--color-neutral-400);
        cursor: not-allowed;

        &:hover,
        &:active {
            outline: none;
            box-shadow: none;
            transform: none;
        }

        &:focus-visible {
            --button-outline-color: var(--color-neutral-600);
        }
    }

    &[data-loading="true"] {
        cursor: wait;

        &:hover:not(:focus-visible) {
            outline: none;
            box-shadow: none;
            transform: none;
        }
    }
}

/* Only actual button elements get pointer cursor */
button.button {
    cursor: pointer;
}

/* Touch device optimization */
@media screen and (any-pointer: coarse) {
    .button {
        --button-margin: 12px;
        --button-padding-y: 12px;
        --button-padding-x: 20px;
    }
}

/* Respect user motion preferences */
@media (prefers-reduced-motion: reduce) {
    .button {
        transition: none !important;
        animation: none !important;
    }
}